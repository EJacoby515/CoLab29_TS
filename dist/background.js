chrome.action.onClicked.addListener((e=>{chrome.scripting.executeScript({target:{tabId:e.id},files:["contentScript.js"]})})),chrome.runtime.onMessage.addListener((function(e,t,s){if("hello"===e.greeting&&s({farewell:"goodbye"}),"startup"===e.action){try{chrome.storage.sync.get(["focusData"]).then((e=>{const t=e.focusData;!t||t.currentGoal&&0===Object.keys(t.currentGoal).length?chrome.storage.sync.set({focusData:{currentGoal:{subtasks:[]}}}).then((()=>{s("onboarding")})).catch((e=>{s(e.message)})):s("returning")})).catch((e=>{s(e.message)}))}catch(e){s(e.message)}return!0}if("fetchGoals"===e.action)return chrome.storage.sync.get(["focusData"]).then((e=>{const t=(e.focusData||{}).currentGoal||{},a=t.name||"";t.subtasks,s({goal:a,subtasks})})),!0;if("appendCurrentGoal"===e.action){const{data:t}=e;return chrome.storage.sync.get(["focusData"]).then((e=>{const a=e.focusData||{};a.currentGoal={name:t},chrome.storage.sync.set({focusData:a}).then((()=>{s(a)}))})),!0}if("appendSubtasks"===e.action){const{data:t}=e;return console.log(t),chrome.storage.sync.get(["focusData"]).then((e=>{const a=e.focusData||{};a.currentGoal=a.currentGoal||{},a.currentGoal.subtasks=a.currentGoal.subtasks||[];for(let e=0;e<t.length;e++){let s={name:t[e],completed:!1,studynotes:null};a.currentGoal.subtasks.push(s)}chrome.storage.sync.set({focusData:a}).then((()=>{s(a)}))})),!0}if("clearGoal"===e.action)return chrome.storage.sync.get(["focusData"]).then((e=>{let t=e.focusData||{currentGoal:{}};t.currentGoal={},chrome.storage.sync.set({focusData:t}).then((()=>{s("cleared")})).catch((e=>{s({error:e.message})}))})).catch((e=>{s({error:e.message})})),!0;if("saveQuickNotes"===e.action){const{notes:t}=e;return chrome.storage.sync.set({quickNotes:t}).then((()=>{s({success:!0})})).catch((e=>{s({success:!1,error:e.message})})),!0}if("convertQuickNotes"===e.action){const{format:t}=e;return chrome.storage.sync.get(["quickNotes"]).then((e=>{const a=e.quickNotes||"";let c="";switch(t){case"doc":case"txt":c=`${a}`;break;case"pdf":c=`\n              <html>\n                <head>\n                  <title>Quick Notes</title>\n                  <style>\n                    body { font-family: Arial, sans-serif; }\n                  </style>\n                </head>\n                <body>${a}</body>\n              </html>\n            `;break;default:return void s({error:"Invalid format"})}const o=new Blob([c],{type:"pdf"===t?"application/pdf":`text/${t}`}),n=URL.createObjectURL(o);chrome.downloads.download({url:n,filename:`quicknotes.${t}`,conflictAction:"uniquify"}),s({success:!0})})).catch((e=>{s({success:!1,error:e.message})})),!0}}));